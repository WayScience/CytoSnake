"""
This module serves as a configuration file for pytest, providing a centralized
location to define fixtures, hooks, and other configuration settings that can be
shared across multiple test files within a pytest project. It allows users to
define reusable fixtures and configuration options, enhancing modularity and
maintainability in test code.
"""
import shutil

import pytest


@pytest.fixture
def config_file_test(tmp_path: pytest.fixture, request: pytest.fixture):
    """
    Generates a path to config file

    Parameters
    ----------
    tmp_path : pytest.fixture
        temporary path generated by pytest fixures

    request : pytest.fixture
        provides access to information and resources related to the currently
        executing test

    Return
    ------
    pathlib.Path
        Path to testing directory.

    Note
    ----
    Paths generated are teared down after the test is finished.
    """

    # creating temporary directory
    unit_test_name = request.node.name
    test_dir = tmp_path / f"unit-testing-{unit_test_name}"
    test_dir.mkdir()

    # copy any config files into the testing directory
    shutil.copy("../datasets/test_config.yaml", test_dir)

    # tear down of the directory after the test is done
    def cleanup():
        """removes testing directory after finishing"""
        shutil.rmtree(test_dir)

    request.addfinalizer(cleanup)

    # return path to testing directory
    return test_dir / "test_config.yaml"
